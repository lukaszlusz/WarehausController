/**
 * This class is generated by jOOQ
 */
package lukaszlusz.sql.generated.tables.records;


import javax.annotation.Generated;

import lukaszlusz.sql.generated.tables.Items;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemsRecord extends UpdatableRecordImpl<ItemsRecord> implements Record7<Integer, Integer, String, String, String, String, Integer> {

    private static final long serialVersionUID = -543601985;

    /**
     * Setter for <code>test.items.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.items.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.items.Amount</code>.
     */
    public void setAmount(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.items.Amount</code>.
     */
    public Integer getAmount() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>test.items.ItemName</code>.
     */
    public void setItemname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.items.ItemName</code>.
     */
    public String getItemname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.items.Category</code>.
     */
    public void setCategory(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.items.Category</code>.
     */
    public String getCategory() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test.items.Status</code>.
     */
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.items.Status</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>test.items.Description</code>.
     */
    public void setDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>test.items.Description</code>.
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>test.items.Box</code>.
     */
    public void setBox(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>test.items.Box</code>.
     */
    public Integer getBox() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, String, String, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, String, String, String, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Items.ITEMS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Items.ITEMS.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Items.ITEMS.ITEMNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Items.ITEMS.CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Items.ITEMS.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Items.ITEMS.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Items.ITEMS.BOX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getItemname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getBox();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value2(Integer value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value3(String value) {
        setItemname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value4(String value) {
        setCategory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value5(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value6(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value7(Integer value) {
        setBox(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ItemsRecord
     */
    public ItemsRecord() {
        super(Items.ITEMS);
    }

    /**
     * Create a detached, initialised ItemsRecord
     */
    public ItemsRecord(Integer id, Integer amount, String itemname, String category, String status, String description, Integer box) {
        super(Items.ITEMS);

        set(0, id);
        set(1, amount);
        set(2, itemname);
        set(3, category);
        set(4, status);
        set(5, description);
        set(6, box);
    }
}
