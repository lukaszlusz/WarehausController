/**
 * This class is generated by jOOQ
 */
package lukaszlusz.sql.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lukaszlusz.sql.generated.Keys;
import lukaszlusz.sql.generated.Warehousedb;
import lukaszlusz.sql.generated.tables.records.BoxesRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Boxes extends TableImpl<BoxesRecord> {

    private static final long serialVersionUID = -2045046015;

    /**
     * The reference instance of <code>warehousedb.boxes</code>
     */
    public static final Boxes BOXES = new Boxes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BoxesRecord> getRecordType() {
        return BoxesRecord.class;
    }

    /**
     * The column <code>warehousedb.boxes.ID</code>.
     */
    public final TableField<BoxesRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>warehousedb.boxes.BarCode</code>.
     */
    public final TableField<BoxesRecord, String> BARCODE = createField("BarCode", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

    /**
     * The column <code>warehousedb.boxes.Description</code>.
     */
    public final TableField<BoxesRecord, String> DESCRIPTION = createField("Description", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>warehousedb.boxes</code> table reference
     */
    public Boxes() {
        this("boxes", null);
    }

    /**
     * Create an aliased <code>warehousedb.boxes</code> table reference
     */
    public Boxes(String alias) {
        this(alias, BOXES);
    }

    private Boxes(String alias, Table<BoxesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Boxes(String alias, Table<BoxesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Warehousedb.WAREHOUSEDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BoxesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BOXES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BoxesRecord> getPrimaryKey() {
        return Keys.KEY_BOXES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BoxesRecord>> getKeys() {
        return Arrays.<UniqueKey<BoxesRecord>>asList(Keys.KEY_BOXES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boxes as(String alias) {
        return new Boxes(alias, this);
    }

    /**
     * Rename this table
     */
    public Boxes rename(String name) {
        return new Boxes(name, null);
    }
}
